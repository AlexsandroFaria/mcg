/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mcg.view;

import br.com.mcg.dao.IniciativaDao;
import br.com.mcg.dao.PersonagemDao;
import br.com.mcg.dao.RepositorioMonstroDao;
import br.com.mcg.model.Iniciativa;
import br.com.mcg.model.Personagem;
import br.com.mcg.model.RepositorioMonstros;
import br.com.mcg.tabelaDeModelos.TabelaModeloIniciativa;
import br.com.mcg.tabelaDeModelos.TabelaModeloMonstroEmBatalha;
import br.com.mcg.tabelaDeModelos.TabelaModeloPersonagemEmCombate;
import java.awt.Graphics;
import java.awt.Image;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author alafaria
 */
public class TelaCombate extends javax.swing.JFrame {

    Personagem personagem = new Personagem();
    PersonagemDao personagemDao = new PersonagemDao();
    RepositorioMonstroDao repositorioMonstroDao = new RepositorioMonstroDao();
    RepositorioMonstros repositorioMonstro = new RepositorioMonstros();
    Iniciativa iniciativa = new Iniciativa();
    IniciativaDao iniciativaDao = new IniciativaDao();
    /**
     * Creates new form TelaCombate
     */
    public TelaCombate() {
        initComponents();
        setIconImage(getToolkit().createImage(getClass().getResource("/icones/icone_principal.png")));
        tabelaPersonagemEmCombate.setModel(new TabelaModeloPersonagemEmCombate(new PersonagemDao().listarPersonagemEmBatalha()));
        btDanoPersonagem.setEnabled(false);
        btCuraPersonagem.setEnabled(false);
        btCuraMonstro.setEnabled(false);
        btDanoMonstro.setEnabled(false);
        tabelaMonstroCombate.setModel(new TabelaModeloMonstroEmBatalha(new RepositorioMonstroDao().listarMonstroParaBatalha()));
        tabelaIniciativa.setModel(new TabelaModeloIniciativa(new IniciativaDao().ListarIniciativa()));
    }

    Icon danoCaixaDialogo = new ImageIcon (getToolkit().createImage(getClass().getResource("/icones/dano.png")));
    Icon curaCaixaDialogo = new ImageIcon (getToolkit().createImage(getClass().getResource("/icones/cura.png")));
    Icon excluirCaixaDialogo = new ImageIcon (getToolkit().createImage(getClass().getResource("/icones/excluir_1.png")));
    
    public void atualizarTabelaDeCombateMonstro(){
        tabelaMonstroCombate.setModel(new TabelaModeloMonstroEmBatalha(new RepositorioMonstroDao().listarMonstroParaBatalha()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tabbedPainelCombate = new javax.swing.JTabbedPane();
        painelPersonagem = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPersonagemEmCombate = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btDanoPersonagem = new javax.swing.JButton();
        btCuraPersonagem = new javax.swing.JButton();
        txtPersonagemCombate = new javax.swing.JTextField();
        txtPontosVidaCombatePersonagem = new javax.swing.JTextField();
        txtDanoCuraPersonagem = new javax.swing.JTextField();
        btLimparCamposPersonagem = new javax.swing.JButton();
        ImageIcon icon = new ImageIcon(getClass().getResource("/imagens/telaCombatePers.png"));
        Image image = icon.getImage();
        jLayeredPane1 = new javax.swing.JLayeredPane(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        painelMonstro = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaMonstroCombate = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtNomeMonstroCombate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPontosVidaMonstroCombate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDanoCuraMonstro = new javax.swing.JTextField();
        btLimparCamposMonstro = new javax.swing.JButton();
        btDanoMonstro = new javax.swing.JButton();
        btCuraMonstro = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btTelaInserirMonstro = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btLimparListaMonstros = new javax.swing.JButton();
        painelIniciativa = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        comboListarPersonagem = new javax.swing.JComboBox<>();
        txtIniciativaPersonagem = new javax.swing.JTextField();
        btAdicionarPersonagemIniciativa = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        comboListarMonstro = new javax.swing.JComboBox<>();
        txtIniciativaMonstro = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btAdicionarMonstroIniciativa = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaIniciativa = new javax.swing.JTable();
        btLimparListaIniciativa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Master Control Guide - Combate");

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));
        jPanel1.setForeground(new java.awt.Color(0, 51, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Combate");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 886, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPainelCombate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        tabelaPersonagemEmCombate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tabelaPersonagemEmCombate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaPersonagemEmCombate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPersonagemEmCombateMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaPersonagemEmCombate);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Personagem:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Pontos de Vida:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Dano / Cura:");

        btDanoPersonagem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btDanoPersonagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/dano.png"))); // NOI18N
        btDanoPersonagem.setText("Dano");
        btDanoPersonagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDanoPersonagemActionPerformed(evt);
            }
        });

        btCuraPersonagem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btCuraPersonagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cura.png"))); // NOI18N
        btCuraPersonagem.setText("Cura");
        btCuraPersonagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCuraPersonagemActionPerformed(evt);
            }
        });

        txtPersonagemCombate.setEditable(false);
        txtPersonagemCombate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtPontosVidaCombatePersonagem.setEditable(false);
        txtPontosVidaCombatePersonagem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtDanoCuraPersonagem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        btLimparCamposPersonagem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btLimparCamposPersonagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/limparCampos.png"))); // NOI18N
        btLimparCamposPersonagem.setText("Limpar Campos");
        btLimparCamposPersonagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparCamposPersonagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout painelPersonagemLayout = new javax.swing.GroupLayout(painelPersonagem);
        painelPersonagem.setLayout(painelPersonagemLayout);
        painelPersonagemLayout.setHorizontalGroup(
            painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPersonagemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelPersonagemLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPersonagemCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE))
                    .addGroup(painelPersonagemLayout.createSequentialGroup()
                        .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDanoCuraPersonagem)
                            .addComponent(txtPontosVidaCombatePersonagem, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelPersonagemLayout.createSequentialGroup()
                                .addComponent(btDanoPersonagem)
                                .addGap(18, 18, 18)
                                .addComponent(btCuraPersonagem))
                            .addComponent(btLimparCamposPersonagem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        painelPersonagemLayout.setVerticalGroup(
            painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPersonagemLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLayeredPane1)
                    .addGroup(painelPersonagemLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtPersonagemCombate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPersonagemLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtDanoCuraPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(painelPersonagemLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(painelPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btDanoPersonagem)
                                    .addComponent(btCuraPersonagem)
                                    .addComponent(jLabel3)
                                    .addComponent(txtPontosVidaCombatePersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btLimparCamposPersonagem)))))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        tabbedPainelCombate.addTab("Personagem", painelPersonagem);

        tabelaMonstroCombate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tabelaMonstroCombate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaMonstroCombate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMonstroCombateMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaMonstroCombate);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Monstro:");

        txtNomeMonstroCombate.setEditable(false);
        txtNomeMonstroCombate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Pontos de Vida:");

        txtPontosVidaMonstroCombate.setEditable(false);
        txtPontosVidaMonstroCombate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Dano / Cura:");

        txtDanoCuraMonstro.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        btLimparCamposMonstro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btLimparCamposMonstro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/limparCampos.png"))); // NOI18N
        btLimparCamposMonstro.setText("Limpar Campos");
        btLimparCamposMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparCamposMonstroActionPerformed(evt);
            }
        });

        btDanoMonstro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btDanoMonstro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/dano.png"))); // NOI18N
        btDanoMonstro.setText("Dano");
        btDanoMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDanoMonstroActionPerformed(evt);
            }
        });

        btCuraMonstro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btCuraMonstro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cura.png"))); // NOI18N
        btCuraMonstro.setText("Cura");
        btCuraMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCuraMonstroActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dragao.png"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/monstro.png"))); // NOI18N

        btTelaInserirMonstro.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btTelaInserirMonstro.setText("Adicionar Monstro a Batalha");
        btTelaInserirMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTelaInserirMonstroActionPerformed(evt);
            }
        });

        btAtualizar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btLimparListaMonstros.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btLimparListaMonstros.setText("Limpar lista de monstros na batalha");
        btLimparListaMonstros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparListaMonstrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelMonstroLayout = new javax.swing.GroupLayout(painelMonstro);
        painelMonstro.setLayout(painelMonstroLayout);
        painelMonstroLayout.setHorizontalGroup(
            painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelMonstroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelMonstroLayout.createSequentialGroup()
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelMonstroLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPontosVidaMonstroCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelMonstroLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDanoCuraMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelMonstroLayout.createSequentialGroup()
                                .addComponent(btDanoMonstro)
                                .addGap(18, 18, 18)
                                .addComponent(btCuraMonstro))
                            .addComponent(btLimparCamposMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelMonstroLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(55, 55, 55)
                        .addComponent(txtNomeMonstroCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(77, 77, 77)
                .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelMonstroLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btLimparListaMonstros))
                    .addGroup(painelMonstroLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel9))
                    .addGroup(painelMonstroLayout.createSequentialGroup()
                        .addComponent(btAtualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btTelaInserirMonstro)))
                .addGap(0, 86, Short.MAX_VALUE))
        );
        painelMonstroLayout.setVerticalGroup(
            painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelMonstroLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelMonstroLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomeMonstroCombate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelMonstroLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPontosVidaMonstroCombate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btDanoMonstro)
                                .addComponent(btCuraMonstro)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btLimparCamposMonstro)
                            .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(txtDanoCuraMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelMonstroLayout.createSequentialGroup()
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btTelaInserirMonstro)
                            .addComponent(btAtualizar))
                        .addGap(18, 18, 18)
                        .addComponent(btLimparListaMonstros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelMonstroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        tabbedPainelCombate.addTab("Monstros", painelMonstro);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Iniciativa Do Personagem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
        jPanel2.setToolTipText("Iniciativa Personagem");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Iniciativa:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Personagem:");

        comboListarPersonagem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        comboListarPersonagem.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                comboListarPersonagemAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtIniciativaPersonagem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        btAdicionarPersonagemIniciativa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btAdicionarPersonagemIniciativa.setText("Adicionar");
        btAdicionarPersonagemIniciativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarPersonagemIniciativaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtIniciativaPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btAdicionarPersonagemIniciativa, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 144, Short.MAX_VALUE))
                    .addComponent(comboListarPersonagem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(comboListarPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtIniciativaPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAdicionarPersonagemIniciativa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Iniciativa Do Monstro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
        jPanel3.setToolTipText("Iniciativa Personagem");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Monstro");

        comboListarMonstro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        comboListarMonstro.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                comboListarMonstroAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtIniciativaMonstro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Iniciativa:");

        btAdicionarMonstroIniciativa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btAdicionarMonstroIniciativa.setText("Adicionar");
        btAdicionarMonstroIniciativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarMonstroIniciativaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtIniciativaMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btAdicionarMonstroIniciativa, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboListarMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(comboListarMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtIniciativaMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAdicionarMonstroIniciativa))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        tabelaIniciativa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tabelaIniciativa);

        btLimparListaIniciativa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btLimparListaIniciativa.setText("Limpar Lista de Iniciativa");
        btLimparListaIniciativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparListaIniciativaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelIniciativaLayout = new javax.swing.GroupLayout(painelIniciativa);
        painelIniciativa.setLayout(painelIniciativaLayout);
        painelIniciativaLayout.setHorizontalGroup(
            painelIniciativaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelIniciativaLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(painelIniciativaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelIniciativaLayout.createSequentialGroup()
                        .addGroup(painelIniciativaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelIniciativaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btLimparListaIniciativa)
                        .addGap(85, 85, 85)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        painelIniciativaLayout.setVerticalGroup(
            painelIniciativaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelIniciativaLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(painelIniciativaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelIniciativaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelIniciativaLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btLimparListaIniciativa)
                .addGap(45, 45, 45))
        );

        tabbedPainelCombate.addTab("Iniciativa", painelIniciativa);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPainelCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 1157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tabbedPainelCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaPersonagemEmCombateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPersonagemEmCombateMouseClicked
        // TODO add your handling code here:
        txtPersonagemCombate.setText(tabelaPersonagemEmCombate.getValueAt(tabelaPersonagemEmCombate.getSelectedRow(), TabelaModeloPersonagemEmCombate.COLUNA_NOME_PERSONAGEM).toString());
        txtPontosVidaCombatePersonagem.setText(tabelaPersonagemEmCombate.getValueAt(tabelaPersonagemEmCombate.getSelectedRow(), TabelaModeloPersonagemEmCombate.COLUNA_PONTOS_VIDA_ATUAL).toString());
        btDanoPersonagem.setEnabled(true);
        btCuraPersonagem.setEnabled(true);
    }//GEN-LAST:event_tabelaPersonagemEmCombateMouseClicked

    private void btLimparCamposPersonagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparCamposPersonagemActionPerformed
        // TODO add your handling code here:
        limparCamposPersonagem();
    }//GEN-LAST:event_btLimparCamposPersonagemActionPerformed

    private void btDanoPersonagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDanoPersonagemActionPerformed
        // TODO add your handling code here:
        try {
            if (txtDanoCuraPersonagem.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo de Dano/Cura não pode estar em branco!","Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                int pontosVida = Integer.parseInt(txtPontosVidaCombatePersonagem.getText());
                int dano = Integer.parseInt(txtDanoCuraPersonagem.getText());
                int resultadoDoCombate = pontosVida - dano;
                if (resultadoDoCombate <= 0) {
                    txtDanoCuraPersonagem.setText("0");
                    personagem.setNome(txtPersonagemCombate.getText());
                    personagem.setPontosVidaAtual(Integer.parseInt(txtDanoCuraPersonagem.getText()));
                    personagem.setSituacao("Derrotado");
                    personagemDao.editarPersonagemEmCombate(personagem);
                    JOptionPane.showMessageDialog(null, "Personagem Derrotado!","Derrota", JOptionPane.ERROR_MESSAGE, danoCaixaDialogo);
                } else {
                    txtDanoCuraPersonagem.setText(Integer.toString(resultadoDoCombate));
                    personagem.setNome(txtPersonagemCombate.getText());
                    personagem.setPontosVidaAtual(Integer.parseInt(txtDanoCuraPersonagem.getText()));
                    personagem.setSituacao("Em Combate");
                    personagemDao.editarPersonagemEmCombate(personagem);
                    JOptionPane.showMessageDialog(null, "Personagem sofreu dano!","Dano Personagem", JOptionPane.ERROR_MESSAGE, danoCaixaDialogo);
                }
            }
        } catch (Exception erro) {
            throw new RuntimeException(erro);
        }
        tabelaPersonagemEmCombate.setModel(new TabelaModeloPersonagemEmCombate(new PersonagemDao().listarPersonagemEmBatalha()));
        limparCamposPersonagem();
    }//GEN-LAST:event_btDanoPersonagemActionPerformed

    private void btCuraPersonagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCuraPersonagemActionPerformed
        // TODO add your handling code here:
        try {
            if (txtDanoCuraPersonagem.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo de Dano/Cura não pode estar em branco!","Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                int pontosVida = Integer.parseInt(txtPontosVidaCombatePersonagem.getText());
                int cura = Integer.parseInt(txtDanoCuraPersonagem.getText());
                int resultadoDoCombate = pontosVida + cura;
                txtDanoCuraPersonagem.setText(Integer.toString(resultadoDoCombate));
                personagem.setNome(txtPersonagemCombate.getText());
                personagem.setPontosVidaAtual(Integer.parseInt(txtDanoCuraPersonagem.getText()));
                personagem.setSituacao("Em Combate");
                personagemDao.editarPersonagemEmCombate(personagem);
                JOptionPane.showMessageDialog(null, "Personagem curadoo!","Cura Personagem", JOptionPane.ERROR_MESSAGE, curaCaixaDialogo);
            }
        } catch (Exception erro) {
            throw new RuntimeException(erro);
        }
        tabelaPersonagemEmCombate.setModel(new TabelaModeloPersonagemEmCombate(new PersonagemDao().listarPersonagemEmBatalha()));
        limparCamposPersonagem();
    }//GEN-LAST:event_btCuraPersonagemActionPerformed

    private void tabelaMonstroCombateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMonstroCombateMouseClicked
        // TODO add your handling code here:
        txtNomeMonstroCombate.setText(tabelaMonstroCombate.getValueAt(tabelaMonstroCombate.getSelectedRow(), TabelaModeloMonstroEmBatalha.COLUNA_NOME_MONSTRO).toString());
        txtPontosVidaMonstroCombate.setText(tabelaMonstroCombate.getValueAt(tabelaMonstroCombate.getSelectedRow(), TabelaModeloMonstroEmBatalha.COLUNA_PONTOS_VIDA_ATUAL).toString());
        btCuraMonstro.setEnabled(true);
        btDanoMonstro.setEnabled(true);
    }//GEN-LAST:event_tabelaMonstroCombateMouseClicked

    private void btLimparCamposMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparCamposMonstroActionPerformed
        // TODO add your handling code here:
        limparCamposMonstro();
    }//GEN-LAST:event_btLimparCamposMonstroActionPerformed

    private void btDanoMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDanoMonstroActionPerformed
        // TODO add your handling code here:
        try {
            if (txtDanoCuraMonstro.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo de Dano/Cura não pode estar em branco!","Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                int pontosVida = Integer.parseInt(txtPontosVidaMonstroCombate.getText());
                int dano = Integer.parseInt(txtDanoCuraMonstro.getText());
                int resultadoDoCombate = pontosVida - dano;
                if (resultadoDoCombate <= 0) {
                    txtDanoCuraMonstro.setText("0");
                    repositorioMonstro.setNomeMonstro(txtNomeMonstroCombate.getText());
                    repositorioMonstro.setPontosDeVidaAtual(Integer.parseInt(txtDanoCuraMonstro.getText()));
                    repositorioMonstro.setSituacao("Derrotado");
                    repositorioMonstroDao.editarMonstroEmCombate(repositorioMonstro);
                    JOptionPane.showMessageDialog(null, "Monstro Derrotado!","Dano Monstro", JOptionPane.ERROR_MESSAGE, danoCaixaDialogo);
                } else {
                    txtDanoCuraMonstro.setText(Integer.toString(resultadoDoCombate));
                    repositorioMonstro.setNomeMonstro(txtNomeMonstroCombate.getText());
                    repositorioMonstro.setPontosDeVidaAtual(Integer.parseInt(txtDanoCuraMonstro.getText()));
                    repositorioMonstro.setSituacao("Em Combate");
                    repositorioMonstroDao.editarMonstroEmCombate(repositorioMonstro);
                    JOptionPane.showMessageDialog(null, "Monstro sofreu dano!","Dano Monstro", JOptionPane.ERROR_MESSAGE, danoCaixaDialogo);
                }
            }
        } catch (Exception erro) {
            throw new RuntimeException(erro);
        }
        atualizarTabelaDeCombateMonstro();
        limparCamposMonstro();
    }//GEN-LAST:event_btDanoMonstroActionPerformed

    private void btCuraMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCuraMonstroActionPerformed
        // TODO add your handling code here:
        try {
            if (txtDanoCuraMonstro.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo de Dano/Cura não pode estar em branco!","Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                int pontosVida = Integer.parseInt(txtPontosVidaMonstroCombate.getText());
                int cura = Integer.parseInt(txtDanoCuraMonstro.getText());
                int resultadoDoCombate = pontosVida + cura;
                txtDanoCuraMonstro.setText(Integer.toString(resultadoDoCombate));
                repositorioMonstro.setNomeMonstro(txtNomeMonstroCombate.getText());
                repositorioMonstro.setPontosDeVidaAtual(Integer.parseInt(txtDanoCuraMonstro.getText()));
                repositorioMonstro.setSituacao("Em Combate");
                repositorioMonstroDao.editarMonstroEmCombate(repositorioMonstro);
                JOptionPane.showMessageDialog(null, "Monstro curado!","Cura Monstro", JOptionPane.ERROR_MESSAGE, curaCaixaDialogo);
            }
        } catch (Exception erro) {
            throw new RuntimeException(erro);
        }
        atualizarTabelaDeCombateMonstro();
        limparCamposMonstro();
    }//GEN-LAST:event_btCuraMonstroActionPerformed

    private void btTelaInserirMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTelaInserirMonstroActionPerformed
        // TODO add your handling code here:
        TelaInserirMonstroBatalha telaInserirMonstroBatalha = new TelaInserirMonstroBatalha();
        telaInserirMonstroBatalha.setVisible(true);
        telaInserirMonstroBatalha.setLocationRelativeTo(null);
    }//GEN-LAST:event_btTelaInserirMonstroActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // TODO add your handling code here:
        atualizarTabelaDeCombateMonstro();
    }//GEN-LAST:event_btAtualizarActionPerformed

    
    
    private void btLimparListaMonstrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparListaMonstrosActionPerformed
        // TODO add your handling code here:
        int opcao = JOptionPane.showConfirmDialog(null, "Excluir Lista de Monstros?", "Excluir Monstros", JOptionPane.YES_NO_OPTION);
        if(opcao == 0){
            String nome = "Monstro";
            repositorioMonstroDao.excluirListaDeMonstros(nome);
        }
        atualizarTabelaDeCombateMonstro();
    }//GEN-LAST:event_btLimparListaMonstrosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboListarPersonagemAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_comboListarPersonagemAncestorAdded
        // TODO add your handling code here:
        List<Personagem> listaDePersonagem = personagemDao.listarPersonagem();
        comboListarPersonagem.removeAll();

        for (Personagem personagem : listaDePersonagem) {
            comboListarPersonagem.addItem(String.valueOf(personagem));
        }
    }//GEN-LAST:event_comboListarPersonagemAncestorAdded

    private void comboListarMonstroAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_comboListarMonstroAncestorAdded
        // TODO add your handling code here:
        List<RepositorioMonstros> listaDeMonstros = repositorioMonstroDao.listarMonstrosBatalha();
        comboListarPersonagem.removeAll();

        for (RepositorioMonstros repositorioMonstros : listaDeMonstros) {
            comboListarMonstro.addItem(String.valueOf(repositorioMonstros));
        }
    }//GEN-LAST:event_comboListarMonstroAncestorAdded

    private void btAdicionarPersonagemIniciativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarPersonagemIniciativaActionPerformed
        // TODO add your handling code here:
        try {
            if(txtIniciativaPersonagem.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Campo Iniciativa não pode estar em branco!");
            }else{
                iniciativa.setCombatente((String) comboListarPersonagem.getSelectedItem());
                iniciativa.setValor_iniciativa(Integer.parseInt(txtIniciativaPersonagem.getText()));
                iniciativaDao.adicionarIniciativa(iniciativa);
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        tabelaIniciativa.setModel(new TabelaModeloIniciativa(new IniciativaDao().ListarIniciativa()));
        txtIniciativaPersonagem.setText("");
    }//GEN-LAST:event_btAdicionarPersonagemIniciativaActionPerformed

    private void btAdicionarMonstroIniciativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarMonstroIniciativaActionPerformed
        // TODO add your handling code here:
        try {
            if(txtIniciativaMonstro.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Campo Iniciativa não pode estar em branco!","Atenção", JOptionPane.WARNING_MESSAGE);
            }else{
                iniciativa.setCombatente((String) comboListarMonstro.getSelectedItem());
                iniciativa.setValor_iniciativa(Integer.parseInt(txtIniciativaMonstro.getText()));
                iniciativaDao.adicionarIniciativa(iniciativa);
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        tabelaIniciativa.setModel(new TabelaModeloIniciativa(new IniciativaDao().ListarIniciativa()));
        txtIniciativaMonstro.setText("");
    }//GEN-LAST:event_btAdicionarMonstroIniciativaActionPerformed

    private void btLimparListaIniciativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparListaIniciativaActionPerformed
        // TODO add your handling code here:
        int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Excluir a Lista?", "Iniciativa - Excluir", JOptionPane.YES_NO_OPTION);
        if (opcao == 0){
            String iniciativa= String.valueOf(comboListarMonstro.getSelectedItem());
            iniciativaDao.excluir(iniciativa);
            tabelaIniciativa.setModel(new TabelaModeloIniciativa(new IniciativaDao().ListarIniciativa()));
            JOptionPane.showMessageDialog(null, "Lista de Iniciativa Excluida com sucesso!", "Excluir Lista", JOptionPane.INFORMATION_MESSAGE, excluirCaixaDialogo);
        }
    }//GEN-LAST:event_btLimparListaIniciativaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCombate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarMonstroIniciativa;
    private javax.swing.JButton btAdicionarPersonagemIniciativa;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btCuraMonstro;
    private javax.swing.JButton btCuraPersonagem;
    private javax.swing.JButton btDanoMonstro;
    private javax.swing.JButton btDanoPersonagem;
    private javax.swing.JButton btLimparCamposMonstro;
    private javax.swing.JButton btLimparCamposPersonagem;
    private javax.swing.JButton btLimparListaIniciativa;
    private javax.swing.JButton btLimparListaMonstros;
    private javax.swing.JButton btTelaInserirMonstro;
    private javax.swing.JComboBox<String> comboListarMonstro;
    private javax.swing.JComboBox<String> comboListarPersonagem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel painelIniciativa;
    private javax.swing.JPanel painelMonstro;
    private javax.swing.JPanel painelPersonagem;
    private javax.swing.JTabbedPane tabbedPainelCombate;
    private javax.swing.JTable tabelaIniciativa;
    private javax.swing.JTable tabelaMonstroCombate;
    private javax.swing.JTable tabelaPersonagemEmCombate;
    private javax.swing.JTextField txtDanoCuraMonstro;
    private javax.swing.JTextField txtDanoCuraPersonagem;
    private javax.swing.JTextField txtIniciativaMonstro;
    private javax.swing.JTextField txtIniciativaPersonagem;
    private javax.swing.JTextField txtNomeMonstroCombate;
    private javax.swing.JTextField txtPersonagemCombate;
    private javax.swing.JTextField txtPontosVidaCombatePersonagem;
    private javax.swing.JTextField txtPontosVidaMonstroCombate;
    // End of variables declaration//GEN-END:variables

    private void limparCamposPersonagem() {
        txtPersonagemCombate.setText("");
        txtPontosVidaCombatePersonagem.setText("");
        txtDanoCuraPersonagem.setText("");
        btCuraPersonagem.setEnabled(false);
        btDanoPersonagem.setEnabled(false);
    }

    private void limparCamposMonstro() {
        txtNomeMonstroCombate.setText("");
        txtPontosVidaMonstroCombate.setText("");
        txtDanoCuraMonstro.setText("");
        btCuraMonstro.setEnabled(false);
        btDanoMonstro.setEnabled(false);
    }
}
